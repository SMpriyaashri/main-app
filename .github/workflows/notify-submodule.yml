name: Notify Submodule Update

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  notify-submodule:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Get commit info
      id: commit
      run: |
        echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        echo "message=$(git log -1 --pretty=format:'%s')" >> $GITHUB_OUTPUT
        echo "author=$(git log -1 --pretty=format:'%an')" >> $GITHUB_OUTPUT
        echo "branch=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_OUTPUT
        
    - name: Trigger submodule update
      run: |
        # Create a repository dispatch event to trigger submodule update
        curl -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.SUBMODULE_UPDATE_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository_owner }}/submodule-shared-app/dispatches \
          -d '{
            "event_type": "main-app-updated",
            "client_payload": {
              "commit_sha": "${{ steps.commit.outputs.sha }}",
              "commit_message": "${{ steps.commit.outputs.message }}",
              "author": "${{ steps.commit.outputs.author }}",
              "branch": "${{ steps.commit.outputs.branch }}",
              "source_repo": "${{ github.repository }}"
            }
          }'
          
    - name: Build and test
      run: |
        npm ci
        npm run build
        npm test -- --watchAll=false
        
    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `âœ… Build successful! Submodule update has been triggered.
            
            **Commit:** ${{ steps.commit.outputs.sha }}
            **Message:** ${{ steps.commit.outputs.message }}
            **Branch:** ${{ steps.commit.outputs.branch }}`
          }) 